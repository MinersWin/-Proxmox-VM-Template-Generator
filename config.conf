# Base Configuration
# Base directory for the template and related files
BASE_DIR="/root/Template"
IMAGES_DIR="${BASE_DIR}/images"

# Paths for configuration files
# Custom SSH and network configuration files to be injected into the VM
SSHD_CONFIG_PATH="${BASE_DIR}/data/etc/ssh/sshd_config"
NETWORKD_CONF_PATH="${BASE_DIR}/data/etc/systemd/system/systemd-networkd-wait-online.service.d/waitany.conf"
DEFAULT_FW_PATH="${BASE_DIR}/default.fw"

# VM Default Settings
# Memory in MB for new VMs
DEFAULT_MEMORY=2048
# Network bridge to attach VMs to
DEFAULT_BRIDGE="vmbr0"
# VLAN tag for network isolation (set to empty string to disable VLAN tagging)
# Example: DEFAULT_VLAN_TAG=""  # Disables VLAN tagging
DEFAULT_VLAN_TAG=5
# SCSI controller type for better disk performance
DEFAULT_SCSIHW="virtio-scsi-pci"
# Storage pool for VM disks
DEFAULT_STORAGE_POOL="MassStorage"
# Network card type (virtio provides best performance for Linux VMs)
DEFAULT_NETWORK_CARD="virtio"  # Available options: virtio, e1000, vmxnet3, etc.

# VM Feature Configuration
# Cloud-Init enables automatic VM customization on first boot:
# - Configures hostname, network settings, and user accounts
# - Injects SSH keys and runs custom scripts
# - Allows template-based VM deployment with different configurations
# Setting this to true will enable the cloud-init flag in the VM
ENABLE_CLOUD_INIT=true

# QEMU Guest Agent enables advanced VM management features:
# - Provides accurate VM IP addresses in Proxmox web interface
# - Enables proper VM shutdown/backup via host commands
# - Allows file system freeze/thaw during backups for consistency
# - Provides better memory management and monitoring
# Note: The guest agent package must also be installed inside the VM
ENABLE_QEMU_AGENT=true

# CPU Configuration
# Available CPU types:
# - host     : Passthrough CPU features from the host (best performance, but may limit migration)
# - kvm64    : Basic CPU without any special features (best compatibility)
# - x86-64-v2-AES: AMD/Intel CPUs with SSE4.2 and AES-NI support (recommended for good performance & compatibility)
# - x86-64-v3: Modern AMD/Intel CPUs with AVX2 support
# - x86-64-v4: Latest AMD/Intel CPUs with AVX512 support
# For migration compatibility:
# - Use 'host' if VMs stay on same CPU type
# - Use 'kvm64' or specific x86-64 version for cross-CPU migration
# Note: x86-64-v2-AES is recommended as it provides hardware AES acceleration
# while maintaining good compatibility across modern CPUs
CPU_TYPE="x86-64-v2-AES"

# Cloud-Init Drive Configuration
# Note on cloud-init configuration:
# IDE controller for cloud-init can cause various issues in Proxmox:
# - Using IDE for cloud-init can lead to problems when cloning templates
# - Some users reported that cloning fails with IDE controller due to 
#   issues with device naming and detection
# - IDE devices are considered legacy and can cause reliability issues
# SCSI is recommended as it provides better compatibility and reliability.
# Reference: https://www.thomas-krenn.com/de/wiki/Cloud_Init_Templates_in_Proxmox_VE_-_Quickstart
# Reference: https://forum.proxmox.com/threads/cloning-vm-template-with-cloud-init-fails.142482/
# Additionally, 'virtio-scsi-single' is recommended as the SCSI hardware controller type
# for better reliability and compatibility.
CLOUDINIT_CONTROLLER="scsi"    # Hardware controller for cloud-init drive (scsi recommended over ide)
CLOUDINIT_CONTROLLER_ID="2"    # Device ID for cloud-init drive

# Drive Attributes
# Cache modes affect disk I/O performance and reliability:
DRIVE_CACHE="none"          # Options: none, writeback, writethrough, directsync, unsafe
DRIVE_DISCARD="on"          # Options: on, off - Enable/disable TRIM for SSDs
DRIVE_SSD="1"               # Options: 0, 1 - Enable/disable SSD emulation
DRIVE_IOTHREAD="0"          # Options: 0, 1 - Enable/disable IO threading
DRIVE_BACKUP="1"            # Options: 0, 1 - Include/exclude drive from backups

# QEMU Configuration
ENABLE_AUTOSTART=true       # Start VM automatically when Proxmox host boots
ENABLE_SERIAL_SOCKET=true   # Enable serial port via socket
ENABLE_FIREWALL=true       # Enable/disable firewall configuration for the VM

# Image Customization
# Space-separated list of packages to install during template creation
# Note: If ENABLE_QEMU_AGENT is set to true, qemu-guest-agent package
# must be included in this list to enable guest agent functionality.
# Without the guest agent, proper VM shutdown will not work and
# the system may need to be forcefully powered off.
# Example with additional packages: INSTALL_PACKAGES="qemu-guest-agent vim htop"
INSTALL_PACKAGES="qemu-guest-agent"

# CSV Configuration
# Column definitions for the CSV input file
CSV_COLUMNS="vm_id,debian_image,storage_pool,vm_name,download_url"

# Screen Configuration
# Set USE_SCREEN=false if you don't want to use screen or if screen is not installed
USE_SCREEN=true
SCREEN_NAME="build_session"
